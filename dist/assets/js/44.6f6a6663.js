(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{452:function(a,e,t){"use strict";t.r(e);var s=t(54),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),t("h2",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),t("h3",{attrs:{id:"仓库-registry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#仓库-registry"}},[a._v("#")]),a._v(" 仓库 registry")]),a._v(" "),t("p",[a._v("服务器上集中存储镜像的地方，一个仓库通常会包含有多个镜像，以不同tag名来区分。以node仓库为例，它有node:10.15.3-alpine、node:11.13.0-alpine等镜像。")]),a._v(" "),t("h3",{attrs:{id:"镜像-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像-image"}},[a._v("#")]),a._v(" 镜像 image")]),a._v(" "),t("p",[a._v("定义了将要运行的程序、配置、资源等的打包文件，是一个静态的定义，可以根据一个镜像来运行多个容器。镜像可以从远程仓库拉取，也可从本地自己构建。")]),a._v(" "),t("p",[a._v("从仓库拉取镜像（registry_url未指定时从默认镜像源拉取；tag_name未指定时，默认为latest标签）：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker pull [registry_url]registry_name[:tag_name]\n")])])]),t("p",[a._v("根据本地Dockerfile构建镜像：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker build dockerfile_path -t image_name\n")])])]),t("p",[a._v("列出已安装的镜像：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker image ls\n")])])]),t("p",[a._v("删除某镜像：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker image rm image_id\n")])])]),t("h3",{attrs:{id:"容器-container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器-container"}},[a._v("#")]),a._v(" 容器 container")]),a._v(" "),t("p",[a._v("程序运行的地方，通过镜像来创建，容器可以被创建、启动、停止、删除等。镜像和容器的关系可理解为面向对象编程中类和实例的关系。")]),a._v(" "),t("p",[a._v("运行容器：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -p outer_port:inner_port image_name\n")])])]),t("p",[a._v("查看所有容器（-a表示包括已停止容器）：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker container ls -a\n")])])]),t("p",[a._v("停止容器（容器停止后默认不会被自动删除，因为可能还要查看日志文件）：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker container stop container_id\n")])])]),t("p",[a._v("删除容器：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker container rm container_id\n")])])]),t("h2",{attrs:{id:"dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[a._v("#")]),a._v(" Dockerfile")]),a._v(" "),t("p",[a._v("Dockerfile可用来自定义一个镜像。")]),a._v(" "),t("p",[a._v("在程序目录下创建一个Dockerfile，在Dockerfile中声明此程序的相关配置，然后docker build这个Dockerfile，即可生成一个docker镜像。")]),a._v(" "),t("p",[a._v("以一个node程序的Dockerfile为例子：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("FROM node:latest\nCOPY . /app\nWORKDIR /app\nRUN npm install\nCMD node index.js\nEXPOSE 8888\n")])])]),t("ul",[t("li",[a._v("FROM node:latest")])]),a._v(" "),t("p",[a._v("指定程序运行的上层环境为node:latest")]),a._v(" "),t("ul",[t("li",[a._v("COPY . /app")])]),a._v(" "),t("p",[a._v("把当前路径的全部文件复制到docker镜像的/app")]),a._v(" "),t("ul",[t("li",[a._v("WORKDIR /app")])]),a._v(" "),t("p",[a._v("指定工作区路径为/app")]),a._v(" "),t("ul",[t("li",[a._v("RUN npm install")])]),a._v(" "),t("p",[a._v("容器启动前准备，执行npm install")]),a._v(" "),t("ul",[t("li",[a._v("CMD node index.js")])]),a._v(" "),t("p",[a._v("容器启动后，在工作区路径执行node index.js")]),a._v(" "),t("ul",[t("li",[a._v("EXPOSE 8888")])]),a._v(" "),t("p",[a._v("对外暴露8888端口")]),a._v(" "),t("h2",{attrs:{id:"分层存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分层存储"}},[a._v("#")]),a._v(" 分层存储")])])}),[],!1,null,null,null);e.default=r.exports}}]);