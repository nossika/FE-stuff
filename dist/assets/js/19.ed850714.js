(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{413:function(t,a,e){"use strict";e.r(a);var r=e(54),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"杂"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#杂"}},[t._v("#")]),t._v(" 杂")]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("h2",{attrs:{id:"js-ecma"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-ecma"}},[t._v("#")]),t._v(" JS（ECMA）")]),t._v(" "),e("h3",{attrs:{id:"数字转字符串-字符串转数字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数字转字符串-字符串转数字"}},[t._v("#")]),t._v(" 数字转字符串 & 字符串转数字")]),t._v(" "),e("p",[t._v('number + "" / number.toString() / String(number)')]),t._v(" "),e("p",[t._v("+string / parseFloat(string) / Number(string)")]),t._v(" "),e("p",[t._v("隐式转换规则，调用to根据preferType调用toString() / valueOf()")]),t._v(" "),e("p",[t._v("Number() & new Number() 区别: 为什么可以在基本属性上执行方法（比如(123).toString()）")]),t._v(" "),e("h3",{attrs:{id:"隐式转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),e("p",[t._v("toPrimitive(hint) hint：string/number/default")]),t._v(" "),e("p",[t._v("string mode: toString => valueOf => error")]),t._v(" "),e("p",[t._v("number mode: valueOf => toString => error")]),t._v(" "),e("h3",{attrs:{id:"数组原型上的方法array-prototype"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组原型上的方法array-prototype"}},[t._v("#")]),t._v(" 数组原型上的方法Array.prototype")]),t._v(" "),e("p",[t._v("影响原数组 / 返回新数组 / 遍历")]),t._v(" "),e("p",[t._v("find、findIndex(ES6)")]),t._v(" "),e("p",[t._v("includes(ES7)")]),t._v(" "),e("h3",{attrs:{id:"es8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es8"}},[t._v("#")]),t._v(" ES8")]),t._v(" "),e("p",[t._v("...Object")]),t._v(" "),e("p",[t._v("await let of")]),t._v(" "),e("h3",{attrs:{id:"object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),e("h4",{attrs:{id:"禁止修改属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#禁止修改属性"}},[t._v("#")]),t._v(" 禁止修改属性")]),t._v(" "),e("p",[t._v("Object.freeze")]),t._v(" "),e("p",[t._v("defineProperty writable")]),t._v(" "),e("p",[t._v("defineProperty set")]),t._v(" "),e("h3",{attrs:{id:"原型继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型继承"}},[t._v("#")]),t._v(" 原型继承")]),t._v(" "),e("h4",{attrs:{id:"instance-a-、prototype-protoa-、constructor-a-之间关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-a-、prototype-protoa-、constructor-a-之间关系"}},[t._v("#")]),t._v(" instance(a)、prototype(protoA)、constructor(A)之间关系:")]),t._v(" "),e("p",[t._v("a ===> protoA:  Object.getPrototypeOf(a);")]),t._v(" "),e("p",[t._v("a ===> A:  a.constructor;")]),t._v(" "),e("p",[t._v("protoA ===> A:  protoA.constructor;")]),t._v(" "),e("p",[t._v("A ===> protoA:  A.prototype;")]),t._v(" "),e("p",[t._v("A ===> a: new A();")]),t._v(" "),e("h4",{attrs:{id:"class-extends-写法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-extends-写法"}},[t._v("#")]),t._v(" class extends 写法")]),t._v(" "),e("h3",{attrs:{id:"promise错误处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise错误处理"}},[t._v("#")]),t._v(" Promise错误处理")]),t._v(" "),e("p",[t._v("能否 try { new Promise(..); } catch() {} ？ 为何")]),t._v(" "),e("p",[t._v("对比")]),t._v(" "),e("p",[t._v("new Promise(...).then(data => {}, error => {})")]),t._v(" "),e("p",[t._v("new Promise(...).then(date => {}).catch(error => {})")]),t._v(" "),e("h3",{attrs:{id:"settimeout-setinterval-处理循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-setinterval-处理循环"}},[t._v("#")]),t._v(" setTimeout & setInterval 处理循环")]),t._v(" "),e("p",[t._v("setInterval可能连续多次触发（定时推送，不管内部函数是否执行完毕，因为JS引擎和定时器是两个不同线程各自执行）")]),t._v(" "),e("h3",{attrs:{id:"esm、cjs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#esm、cjs"}},[t._v("#")]),t._v(" esm、cjs")]),t._v(" "),e("p",[t._v("import：编译时导入（静态），值引用，只读；")]),t._v(" "),e("p",[t._v("require：运行时导入（动态），值拷贝")]),t._v(" "),e("p",[t._v("循环引用区别")]),t._v(" "),e("p",[t._v("import()动态，返回promise。")]),t._v(" "),e("h3",{attrs:{id:"amd、cmd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#amd、cmd"}},[t._v("#")]),t._v(" AMD、CMD")]),t._v(" "),e("p",[t._v("AMD：依赖前置，requireJS")]),t._v(" "),e("p",[t._v("CMD：依赖就近，seaJS")]),t._v(" "),e("p",[t._v('浏览器中用法：type="module"')]),t._v(" "),e("h3",{attrs:{id:"数字精度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数字精度"}},[t._v("#")]),t._v(" 数字精度")]),t._v(" "),e("p",[t._v("JS中能转换成整数的值都会用整数来存储，小数在底层用 IEEE-754 双精度（64位）浮点数来存储。")]),t._v(" "),e("p",[t._v("64位：1符号位+11指数位+52有效数字位")]),t._v(" "),e("p",[t._v("小数x转化成二进制是用 x = 1/2*a + 1/4*b + 1/8*c + 1/16*d ... 中的abcd等因子来表示。")]),t._v(" "),e("p",[t._v("比如0.1 = 1/2*0 + 1/4*0 + 1/8*0 + 1/16*1 + 1/32*1 + 1/64*0  ... ，则0.1的二进制表示为00011001100...，去掉头部的0从1开始（头部的0可以在指数位表示），则有效数字部分为11001100...")]),t._v(" "),e("p",[t._v("因此大部分小数无法精确存储，除了0.5/0.125/0.375这类数字")]),t._v(" "),e("h3",{attrs:{id:"手写函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写函数"}},[t._v("#")]),t._v(" 手写函数")]),t._v(" "),e("p",[t._v("实现Array.prototype.reduce/String.prototype.indexOf/Function.prototype.bind")]),t._v(" "),e("h3",{attrs:{id:"排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("平均")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("最快")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("最慢")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("空间")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("快排")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("NlogN")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("NlogN")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("冒泡")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("插入")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1")])])])]),t._v(" "),e("h3",{attrs:{id:"尾调用优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#尾调用优化"}},[t._v("#")]),t._v(" 尾调用优化")]),t._v(" "),e("p",[t._v("最后return一个函数，不依赖其他变量")]),t._v(" "),e("p",[t._v("递归会产生多层函数调用栈，优化后只有一层")]),t._v(" "),e("h2",{attrs:{id:"js-dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-dom"}},[t._v("#")]),t._v(" JS（DOM）")]),t._v(" "),e("h3",{attrs:{id:"addeventlistener参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addeventlistener参数"}},[t._v("#")]),t._v(" addEventListener参数")]),t._v(" "),e("p",[t._v("冒泡、捕获，")]),t._v(" "),e("p",[t._v("阻止冒泡")]),t._v(" "),e("h3",{attrs:{id:"attribute操作-class操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#attribute操作-class操作"}},[t._v("#")]),t._v(" attribute操作，class操作")]),t._v(" "),e("h3",{attrs:{id:"检测页面是否滚动到底部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检测页面是否滚动到底部"}},[t._v("#")]),t._v(" 检测页面是否滚动到底部")]),t._v(" "),e("h3",{attrs:{id:"nodelist-htmlcollection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-htmlcollection"}},[t._v("#")]),t._v(" NodeList & HTMLCollection")]),t._v(" "),e("p",[t._v("Node.childNodes & Node.children")]),t._v(" "),e("p",[t._v("HTMLCollection不同：只包含elementNode（无textNode）、动态更新、namedItem方法")]),t._v(" "),e("h3",{attrs:{id:"cssstyledeclaration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cssstyledeclaration"}},[t._v("#")]),t._v(" CSSStyleDeclaration")]),t._v(" "),e("p",[t._v("CSSStyleDeclaration.setProperty('--color', 'red')")]),t._v(" "),e("h3",{attrs:{id:"repaint-reflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repaint-reflow"}},[t._v("#")]),t._v(" repaint & reflow")]),t._v(" "),e("p",[t._v("repaint: transform/visibility/background")]),t._v(" "),e("h2",{attrs:{id:"js-bom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-bom"}},[t._v("#")]),t._v(" JS（BOM）")]),t._v(" "),e("h3",{attrs:{id:"区分pc-ios-android"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区分pc-ios-android"}},[t._v("#")]),t._v(" 区分pc/ios/android")]),t._v(" "),e("h2",{attrs:{id:"js-引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-引擎"}},[t._v("#")]),t._v(" JS 引擎")]),t._v(" "),e("h3",{attrs:{id:"v8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8"}},[t._v("#")]),t._v(" V8")]),t._v(" "),e("p",[t._v("runtime优化")]),t._v(" "),e("p",[t._v("垃圾回收：")]),t._v(" "),e("p",[t._v("新生代（from/to，存活晋升）、老生代（标记清除、标记整理）、大对象、jit")]),t._v(" "),e("h3",{attrs:{id:"事件循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),e("p",[t._v("GUI渲染线程、JS主线程、定时器线程、http请求线程")]),t._v(" "),e("p",[t._v("setTimeout和Promise.then先后（macro、micro）")]),t._v(" "),e("h3",{attrs:{id:"webworker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webworker"}},[t._v("#")]),t._v(" WebWorker")]),t._v(" "),e("p",[t._v("Worker、SharedWorker（后者是独立进程，多tab页可共享一个）")]),t._v(" "),e("h2",{attrs:{id:"mobile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mobile"}},[t._v("#")]),t._v(" mobile")]),t._v(" "),e("h3",{attrs:{id:"flexible方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flexible方案"}},[t._v("#")]),t._v(" flexible方案")]),t._v(" "),e("p",[t._v("通过dpr来设置根节点的font-size + viewport的scale，页面使用设计图尺寸转换得到的rem，完成一个设计图到多种屏幕的适配")]),t._v(" "),e("h2",{attrs:{id:"浏览器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),e("h3",{attrs:{id:"渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[t._v("#")]),t._v(" 渲染")]),t._v(" "),e("h4",{attrs:{id:"过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),e("ul",[e("li",[t._v("style（确定每个节点应用的css规则）")]),t._v(" "),e("li",[t._v("layout（reflow，重新计算各个节点位置）")]),t._v(" "),e("li",[t._v("update layer tree（确定层叠顺序））（render layer）")]),t._v(" "),e("li",[t._v("paint（计算节点绘制信息）")]),t._v(" "),e("li",[t._v("composite（合成层）（graphics layer）")])]),t._v(" "),e("h4",{attrs:{id:"gpu加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gpu加速"}},[t._v("#")]),t._v(" gpu加速")]),t._v(" "),e("p",[t._v("dom的绘制信息会被分成多个格栅上传gpu绘制")]),t._v(" "),e("p",[t._v("某些情况下节点会被单独升级为合成层（比如：transform、opacity、canvas标签、手动加上will-change、有个比自己index低的合成层时 等），浏览器会独立绘制各个合成层，最后再复合而成最终页面，合成层内的dom变动只需要重绘这个层，更高效。")]),t._v(" "),e("p",[t._v("结论：尽量用transform，合理利用will-change，把合成层的index尽可能高（避免自动创建不必要的合成层）")]),t._v(" "),e("h4",{attrs:{id:"dom-update-、-dom-render"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-update-、-dom-render"}},[t._v("#")]),t._v(" dom update 、 dom render")]),t._v(" "),e("ul",[e("li",[t._v("dom update的修改和获取是实时的，dom render是非实时（一般在一轮循环中，task和microtask都执行完后render，不一定每轮，因为事件循环频率可能比浏览器帧率高）")]),t._v(" "),e("li",[t._v("所以vue使用promise.then来做dom更新，如果放在task里则下轮循环才更新")])]),t._v(" "),e("h3",{attrs:{id:"输入url-页面展示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入url-页面展示"}},[t._v("#")]),t._v(" 输入url => 页面展示")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("缓存查询")])]),t._v(" "),e("li",[e("p",[t._v("dns")])]),t._v(" "),e("li",[e("p",[t._v("打开tcp（tcp/ip协议）\n后台负载均衡")])]),t._v(" "),e("li",[e("p",[t._v("browser主进程发起请求 => 结果转交给render进程（tab页进程）处理\n浏览器多进程（主进程，tab页，GPU等），tab页多线程（js引擎、GUI渲染、http请求、定时器、事件调度等）")])]),t._v(" "),e("li",[e("p",[t._v("渲染（DOM树，CSS树，render树）\njs解析会中断渲染（GUI渲染线程与js线程互斥）")])])]),t._v(" "),e("h2",{attrs:{id:"web"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web"}},[t._v("#")]),t._v(" WEB")]),t._v(" "),e("h3",{attrs:{id:"http协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" http协议")]),t._v(" "),e("p",[t._v("基于tcp协议，req格式： "),e("code",[t._v("HTTP/1.1 /index.html GET\\r\\nConnection: keep-alive")]),t._v("，res格式："),e("code",[t._v("HTTP/1.1 200 OK\\r\\nContent-type: text/plain\\r\\n\\r\\nsome text here")])]),t._v(" "),e("p",[t._v("1.1默认keep-alive，基于一次tcp（3次握手4次挥手）来发多次http请求")]),t._v(" "),e("p",[t._v("状态码12345")]),t._v(" "),e("p",[t._v("header(content-type/accept-encoding/user-agent/cookie/access-control-allow-origin/cache-control/e-tag/connection)")]),t._v(" "),e("p",[t._v("缓存控制")]),t._v(" "),e("p",[t._v("cookie")]),t._v(" "),e("p",[t._v("http2：二进制、多路复用、主动推送、头部压缩")]),t._v(" "),e("p",[t._v("https")]),t._v(" "),e("h3",{attrs:{id:"前端缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端缓存"}},[t._v("#")]),t._v(" 前端缓存")]),t._v(" "),e("h4",{attrs:{id:"缓存位置-service-worker、memory-关闭tab清空-、disk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置-service-worker、memory-关闭tab清空-、disk"}},[t._v("#")]),t._v(" 缓存位置：service worker、memory（关闭tab清空）、disk")]),t._v(" "),e("h4",{attrs:{id:"缓存顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存顺序"}},[t._v("#")]),t._v(" 缓存顺序")]),t._v(" "),e("p",[t._v("：\nSW内的fetch方法也遵守此规则")]),t._v(" "),e("p",[t._v("强制缓存：cache-control(max-age)、expires")]),t._v(" "),e("p",[t._v("协商缓存：e-tag、last-modified")]),t._v(" "),e("h4",{attrs:{id:"no-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-store"}},[t._v("#")]),t._v(" no-store")]),t._v(" "),e("p",[t._v("除了no-store的情况，当前页多次同一资源的请求（无论同步异步）只会从网络获取一次，其余都从memory获取（且不显示在network），如果no-store，则多少请求就获取多少次")]),t._v(" "),e("h3",{attrs:{id:"websocket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" websocket")]),t._v(" "),e("p",[t._v("和http一样基于tcp，http协议的升级")]),t._v(" "),e("p",[t._v("tcp连接（连接实例称为socket）建立后，客户端发送http格式的报文"),e("code",[t._v("{ Connection: Upgrade, Upgrade: websocket, ... }")]),t._v("，服务端如果支持，也返回类似的确认报文，双方都对这个socket做好全双工通信的准备，即websocket连接建立。")]),t._v(" "),e("h3",{attrs:{id:"socket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[t._v("#")]),t._v(" socket")]),t._v(" "),e("p",[t._v("套接字，可以理解为一个连接的实例，\n比如说服务端客户端建立起一个tcp连接，那么两端各会有一个socket实例，可以对其调用各种方法来收发信息。")]),t._v(" "),e("h3",{attrs:{id:"七层模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七层模型"}},[t._v("#")]),t._v(" 七层模型")]),t._v(" "),e("p",[t._v("应用：http")]),t._v(" "),e("p",[t._v("会话：ssl/tls")]),t._v(" "),e("p",[t._v("传输：tcp/udp")]),t._v(" "),e("p",[t._v("网络：ip")]),t._v(" "),e("h3",{attrs:{id:"跨域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),e("p",[t._v("http header(cors)")]),t._v(" "),e("p",[t._v("iframe")]),t._v(" "),e("p",[t._v("jsonp")]),t._v(" "),e("p",[t._v("nginx转发")]),t._v(" "),e("h3",{attrs:{id:"性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),e("p",[t._v("定位：chrome的network、performance、memory")]),t._v(" "),e("p",[t._v("解决：")]),t._v(" "),e("p",[t._v("dns：cdn")]),t._v(" "),e("p",[t._v("缓存：response header、打包配置")]),t._v(" "),e("p",[t._v("文件粒度：打包配置")]),t._v(" "),e("p",[t._v("业务代码：结合框架特性")]),t._v(" "),e("p",[t._v("http2")]),t._v(" "),e("p",[t._v("window.performance：measure、mark")]),t._v(" "),e("h3",{attrs:{id:"安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),e("p",[t._v("XSS：信任用户输入且输出到页面时未转义，恶意用户的script（也可能是img的onload等）被渲染到正常用户的页面上执行。1、转义。2、meta：Content-Security-Policy（限制资源来源、请求的）")]),t._v(" "),e("p",[t._v("CSRF：信任请求，第三方网站发起到cookie的本站请求。1、加上无法跨页获取的token(dom注入、setcookie手动取出)。2、cookie的SameSite")]),t._v(" "),e("p",[t._v("？？dom注入的话，外域可以先ajax请求页面（一般页面不会有限制？）拿到dom，再拿token去发出恶意api？？")]),t._v(" "),e("p",[t._v("SQL注入")]),t._v(" "),e("p",[t._v("DDoS")]),t._v(" "),e("p",[t._v("WAF")]),t._v(" "),e("h3",{attrs:{id:"模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),e("p",[t._v("ESM / CJS / AMD / CMD  / UMD")]),t._v(" "),e("h3",{attrs:{id:"源码阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码阅读"}},[t._v("#")]),t._v(" 源码阅读")]),t._v(" "),e("p",[t._v("main/module")]),t._v(" "),e("p",[t._v("package.json scripts")]),t._v(" "),e("p",[t._v("main entry")]),t._v(" "),e("p",[t._v("submodule")]),t._v(" "),e("h2",{attrs:{id:"构建工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建工具"}},[t._v("#")]),t._v(" 构建工具")]),t._v(" "),e("h3",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),e("h4",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("p",[t._v("多入口配置")]),t._v(" "),e("p",[t._v("loader作用，对特定文件编译，流式")]),t._v(" "),e("p",[t._v("plugin作用 ，全局作用，在complition不同阶段起作用")]),t._v(" "),e("h4",{attrs:{id:"实现代码分割"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现代码分割"}},[t._v("#")]),t._v(" 实现代码分割")]),t._v(" "),e("p",[t._v("splitChunk：单页：用test提取公共文件，减小文件体积，配合chunkhash，浏览器缓存公共文件；多入口：用minChunks提取出多次引用的文件")]),t._v(" "),e("p",[t._v("ddl：ddl.config打包公共文件生成manifest，config引用这个manifest，不会对公共文件再次打包，提高编译速度")]),t._v(" "),e("h4",{attrs:{id:"defineplugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#defineplugin"}},[t._v("#")]),t._v(" definePlugin:")]),t._v(" "),e("p",[t._v("一般用于定义一些全局字段，和process.env（模仿node环境）。")]),t._v(" "),e("p",[t._v("这些配置是在编译阶段静态直接转换，而非生成全局变量，比如模块中"),e("code",[t._v("process.env.NODE_ENV")]),t._v("编译后会直接被替换为定义的值，而"),e("code",[t._v("process.env['NODE' + '_ENV']")]),t._v("则不会")]),t._v(" "),e("h4",{attrs:{id:"loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[t._v("#")]),t._v(" loader")]),t._v(" "),e("p",[t._v("webpack中使用loader：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("config = {\n\tentry: '',\n\toutput: {},\n\tmodule: {\n\t\trules: [ // Rule[]\n\t\t\t{\n\t\t\t\ttest: /xx.ext/,\n\t\t\t\tuse: [ // Loader[]\n\t\t\t\t\t'loader-a',\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'loader-b',\n\t\t\t\t\t\toption: {},\n\t\t\t\t\t\tquery: {},\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}\n")])])]),e("p",[t._v("编译过程中遇到匹配某rule的test的文件，会使用rule的use中设置的loader（可以是多个loader，从后往前）来加载这个文件。loader从node_module里的对应loader名调用。")]),t._v(" "),e("p",[t._v("loader编写：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("module.export = function(content, map, meta) { \n\t// do sth\n\treturn newContent;\n}\n")])])]),e("p",[t._v("或者异步使用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("module.export = function(content, map, meta) { \n\t// do sth\n\tthis.callback(newContent);\n}\n")])])]),e("p",[t._v("babel-loader（文本loader）：")]),t._v(" "),e("p",[t._v("得到js文件的文本内容content，将其解析成ast，重新组织语法，再生成新的字符串newContent返回")]),t._v(" "),e("p",[t._v("file-loader（二进制loader）：")]),t._v(" "),e("p",[t._v("文件内容content为二进制数据。引用webpack自带的loader-utils库，调用其"),e("code",[t._v("interpolateName")]),t._v("方法得到其hash名，调用"),e("code",[t._v("this.emitFile")]),t._v("把二进制content生成新file输出到output指定的目录下，最终结合config中的publicPath得到新file的可访问路径，最终组合成"),e("code",[t._v("module.exports = fileOutputPath")]),t._v("格式的数据返回")]),t._v(" "),e("h4",{attrs:{id:"plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" plugin")]),t._v(" "),e("p",[t._v("plugin使用：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\tconfig = {\n\t\tentry: '',\n\t\toutput: {},\n\t\tplugins: [\n\t\t\tnew SomePlugin(options),\n\t\t],\n\t}\n")])])]),e("p",[t._v("plugin编写：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("class {\n\tconstructor(options) {\n\t\t// 拿到用户定义的options\n\t}\n\tapply(compiler) {\n\t\t// 插件安装时调用一次，拿到compiler对象（提供webpack全局配置信息）\n\t\t// 可以从compiler的hooks回调拿到compilation对象（每次文件变动重新生成，提供本次资源相关信息）\n\t\t// 在compiler和compilation的各类hooks\b（基于tapable）绑定自定义事件\n\t}\t\t\t\n}\n")])])]),e("h3",{attrs:{id:"rollup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rollup"}},[t._v("#")]),t._v(" rollup")]),t._v(" "),e("p",[t._v("适合库而非应用（app），treeshaking，缺少懒加载")]),t._v(" "),e("h3",{attrs:{id:"webpack-rollup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-rollup"}},[t._v("#")]),t._v(" webpack&rollup")]),t._v(" "),e("p",[t._v("treeshaking + 去除无用if代码")]),t._v(" "),e("h3",{attrs:{id:"gulp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gulp"}},[t._v("#")]),t._v(" gulp")]),t._v(" "),e("p",[t._v("流式任务")]),t._v(" "),e("h3",{attrs:{id:"babel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[t._v("#")]),t._v(" babel")]),t._v(" "),e("p",[t._v("polyfill关系：babel只转语法，polyfill拓展原型和全局对象")]),t._v(" "),e("p",[t._v("原理：text => tokens => ast => ast(transformed) => text")]),t._v(" "),e("p",[t._v("browser版：监听DOMContentLoaded，选取所有"),e("code",[t._v('type="text/babel"')]),t._v("（带src的ajax加载），编译结果新建script设置script.text后append到head")]),t._v(" "),e("h2",{attrs:{id:"html"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),e("h3",{attrs:{id:"input有哪些attribute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input有哪些attribute"}},[t._v("#")]),t._v(" input有哪些attribute")]),t._v(" "),e("h3",{attrs:{id:"label作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#label作用"}},[t._v("#")]),t._v(" label作用")]),t._v(" "),e("h3",{attrs:{id:"script标签-defer、async"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#script标签-defer、async"}},[t._v("#")]),t._v(" script标签 defer、async")]),t._v(" "),e("h3",{attrs:{id:"blob-、dataurl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blob-、dataurl"}},[t._v("#")]),t._v(" blob 、dataURL")]),t._v(" "),e("h4",{attrs:{id:"blob"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blob"}},[t._v("#")]),t._v(" blob")]),t._v(" "),e("p",[t._v("提供内存地址，数据保存在页面内存")]),t._v(" "),e("p",[e("code",[t._v("new Blob([...data], {...options})")]),t._v(" 自动垃圾回收")]),t._v(" "),e("p",[e("code",[t._v("URL.createObjectURL(file)")]),t._v(" 用URL.revokeObjectURL手动回收")]),t._v(" "),e("h4",{attrs:{id:"dataurl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dataurl"}},[t._v("#")]),t._v(" dataURL")]),t._v(" "),e("p",[t._v("用编码（比如base64字符串）显式表示文件")]),t._v(" "),e("p",[e("code",[t._v("new FileReader().readAsDataURL")])]),t._v(" "),e("h2",{attrs:{id:"css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),e("h3",{attrs:{id:"float、flex、gird"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#float、flex、gird"}},[t._v("#")]),t._v(" float、flex、gird")]),t._v(" "),e("h3",{attrs:{id:"bfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),e("p",[t._v("独立容器，不影响外部")]),t._v(" "),e("p",[t._v("BFC：overflow: hidden / float: left / display: inline-block")]),t._v(" "),e("p",[t._v("特性：外部margin不合并/内部清除浮动（高度不塌陷）/外部清除浮动（文字不环绕）")]),t._v(" "),e("h3",{attrs:{id:"无限滚动的轮播图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#无限滚动的轮播图"}},[t._v("#")]),t._v(" 无限滚动的轮播图")]),t._v(" "),e("h3",{attrs:{id:"左边定宽右边自适应多种实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#左边定宽右边自适应多种实现"}},[t._v("#")]),t._v(" 左边定宽右边自适应多种实现")]),t._v(" "),e("p",[t._v("flex、calc、absolute")]),t._v(" "),e("h3",{attrs:{id:"css变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css变量"}},[t._v("#")]),t._v(" CSS变量")]),t._v(" "),e("h3",{attrs:{id:"retina-画0-5px"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#retina-画0-5px"}},[t._v("#")]),t._v(" retina 画0.5px")]),t._v(" "),e("p",[t._v("dpr（window.devicePixelRatio）+ "),e("code",[t._v('<mete name="viewport"/>')]),t._v("(initial-scale)")]),t._v(" "),e("h3",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),e("h2",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("h3",{attrs:{id:"组件通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),e("p",[t._v("prop")]),t._v(" "),e("p",[t._v("emit")]),t._v(" "),e("p",[t._v("bus、vuex等第三方数据管理库")]),t._v(" "),e("p",[t._v("watch")]),t._v(" "),e("p",[t._v("ref")]),t._v(" "),e("p",[t._v("broadcast+dispatch（vue1）")]),t._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("h3",{attrs:{id:"vuex-数据流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-数据流"}},[t._v("#")]),t._v(" vuex 数据流")]),t._v(" "),e("p",[t._v("action异步，mutation同步")]),t._v(" "),e("p",[t._v("弊端：action意义不大")]),t._v(" "),e("h3",{attrs:{id:"nexttick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" $nextTick")]),t._v(" "),e("p",[t._v("作用")]),t._v(" "),e("p",[t._v("可否用setTimeout替代")]),t._v(" "),e("h3",{attrs:{id:"v-if-v-show"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-show"}},[t._v("#")]),t._v(" v-if & v-show")]),t._v(" "),e("p",[t._v("用法，场景")]),t._v(" "),e("h3",{attrs:{id:"父调子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父调子"}},[t._v("#")]),t._v(" 父调子")]),t._v(" "),e("p",[t._v("ref、props+watch")]),t._v(" "),e("h3",{attrs:{id:"实现tel格式的input-133-1234-1234"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现tel格式的input-133-1234-1234"}},[t._v("#")]),t._v(" 实现tel格式的input（133 1234 1234）")]),t._v(" "),e("h3",{attrs:{id:"从data改变到view变化经历的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从data改变到view变化经历的过程"}},[t._v("#")]),t._v(" 从data改变到view变化经历的过程")]),t._v(" "),e("p",[t._v("初始化 为obj每个属性建立getter/setter，挂载新dep")]),t._v(" "),e("p",[t._v("初次渲染 利用触发getter绑定watcher到dep")]),t._v(" "),e("p",[t._v("数据变化 setter触发dep中的watcher，watcher触发更新")]),t._v(" "),e("p",[t._v("更新 virtual dom，snabbdom diff，patch")]),t._v(" "),e("h3",{attrs:{id:"watcher和virtual-dom结合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watcher和virtual-dom结合"}},[t._v("#")]),t._v(" watcher和virtual dom结合")]),t._v(" "),e("p",[t._v("vue1: 每条data一个watcher，绑定到data对应的dom，data变化直接更新到dom，粒度细\nvue2的vdom：每条data一个watcher，每个组件也一个watcher，data只绑定到组件，data变化通知组件的watcher重新渲染，粒度适中")]),t._v(" "),e("h3",{attrs:{id:"runtime-with-compiler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runtime-with-compiler"}},[t._v("#")]),t._v(" runtime & with-compiler")]),t._v(" "),e("h3",{attrs:{id:"slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" slots")]),t._v(" "),e("p",[t._v("slot-scope用法（子："),e("code",[t._v('<slot name="a" :params="params"/>')]),t._v("，父："),e("code",[t._v('<div slot="a" slot-scope="p">'+t._s(t.p)+"</div>")]),t._v("）")]),t._v(" "),e("p",[t._v("$slots返回值（render函数）")]),t._v(" "),e("h3",{attrs:{id:"css-scope"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-scope"}},[t._v("#")]),t._v(" css scope")]),t._v(" "),e("h3",{attrs:{id:"mixins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mixins"}},[t._v("#")]),t._v(" mixins")]),t._v(" "),e("h3",{attrs:{id:"vue-directive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-directive"}},[t._v("#")]),t._v(" Vue.directive")]),t._v(" "),e("h3",{attrs:{id:"大列表优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大列表优化"}},[t._v("#")]),t._v(" 大列表优化")]),t._v(" "),e("h3",{attrs:{id:"ssr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssr"}},[t._v("#")]),t._v(" SSR")]),t._v(" "),e("p",[t._v("生命周期只执行到created且不能有浏览器独有api")]),t._v(" "),e("p",[t._v("###dom diff")]),t._v(" "),e("p",[t._v("基于snabbdom，头尾双指针，o(n)，牺牲对比精度换取时间(更贴近数组实际操作而非完全乱序)，有key的情况")]),t._v(" "),e("h3",{attrs:{id:"源码学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码学习"}},[t._v("#")]),t._v(" 源码学习")]),t._v(" "),e("h4",{attrs:{id:"结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),e("p",[t._v("core/instance 定义Vue，定义原型属性")]),t._v(" "),e("p",[t._v("core/globalAPI 定义静态属性")]),t._v(" "),e("p",[t._v("platform 平台化包装导出（runtime & with-compiler）")]),t._v(" "),e("p",[t._v("core/lifecycle  初始化实例的生命周期，callHook")]),t._v(" "),e("p",[t._v("架构是随着项目发展调整的，commit记录")]),t._v(" "),e("h4",{attrs:{id:"dep-target"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dep-target"}},[t._v("#")]),t._v(" dep.target")]),t._v(" "),e("p",[t._v("正常：data监听setter和绑定dep，编译模板时AST解析调用了哪些data属性，去给它们添加dep")]),t._v(" "),e("p",[t._v("Vue：data还监听了getter，编译模板时会触发getter，getter里通过target判断是否处于编译中，是的话把target指向的watcher添加到对应的dep，编译前后会改写target")]),t._v(" "),e("h4",{attrs:{id:"nexttick-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nexttick-2"}},[t._v("#")]),t._v(" nextTick")]),t._v(" "),e("p",[t._v("（内部实现micro：Promise，macro：MessageChannel、setTimeout）")]),t._v(" "),e("p",[t._v("定义microFunc macroFunc")]),t._v(" "),e("p",[t._v("执行nextTick时，推入callbacks并触发一次（根据pending变量判断）在下轮执行flushCallbacks")]),t._v(" "),e("p",[t._v("flushCallbacks清空callbacks，依次执行callbacks（先清空来保证出现nextTick嵌套时的执行次序）")]),t._v(" "),e("p",[t._v("数据变动优先使用micro，可以在一轮事件循环内改变完data，只触发一次重渲染")]),t._v(" "),e("h4",{attrs:{id:"computed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" computed")]),t._v(" "),e("p",[t._v("vue中的computed具有缓存和懒计算。")]),t._v(" "),e("p",[t._v("实现：")]),t._v(" "),e("p",[t._v("每个computed属性会建立一个watcher对应。")]),t._v(" "),e("p",[t._v("在被使用时（getter触发时）进入computedGetter，根据watcher.dirty的值 true/false 决定 重新计算/返回缓存。")]),t._v(" "),e("p",[t._v("第一次被使用时，默认watcher.dirty为true，触发computed计算，并收集计算中用到的依赖（把自身关联到依赖的watcher通知列表），并存下本次计算的value值。")]),t._v(" "),e("p",[t._v("当有依赖发生改动时，该computed的watcher.dirty会被设置为true，下次该computed被使用时就会被重新计算并缓存value，再把dirty重置为false。")]),t._v(" "),e("h3",{attrs:{id:"vue-react差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-react差异"}},[t._v("#")]),t._v(" vue/react差异")]),t._v(" "),e("p",[t._v("写法：webcomponent / all in js")]),t._v(" "),e("p",[t._v("MVC：数据层侵入 / 纯视图")]),t._v(" "),e("p",[t._v("数据管理：便捷的v-model、computed / 单向、immutable的数据流")]),t._v(" "),e("p",[t._v("库：官方库 简单 / 第三方库 灵活 复杂")]),t._v(" "),e("h2",{attrs:{id:"react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),e("p",[t._v("###组件通信")]),t._v(" "),e("p",[t._v("prop,ref,context,数据管理(redux, mobx, rx)")]),t._v(" "),e("p",[t._v("###生命周期")]),t._v(" "),e("p",[t._v("新建： constructor -> componentWillMount -> render -> componentDidMount")]),t._v(" "),e("p",[t._v("卸载：componentWillUnmount")]),t._v(" "),e("p",[t._v("更新：componentWillReceiveProps -> shouldComponentUpdate-> componentWillUpdate -> render -> componentDidUpdate")]),t._v(" "),e("p",[t._v("setState：shouldComponentUpdate-> componentWillUpdate -> render -> componentDidUpdate")]),t._v(" "),e("p",[t._v("forceUpdate：componentWillUpdate -> render -> componentDidUpdate")]),t._v(" "),e("h3",{attrs:{id:"redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" redux")]),t._v(" "),e("p",[t._v("redux实现：")]),t._v(" "),e("p",[t._v("\bcombineReducers把多个reducer函数整合成一个大reducer函数，createStore(reducer)初始化store。")]),t._v(" "),e("p",[t._v("每次调用store.dispatch(action)，该action都会通过这个大reducer（相当于通过每个子reducer），来得到各部分的新state，最后整合得到大state。")]),t._v(" "),e("p",[t._v("结合react-redux：顶层state变化时，使用connect的组件会将它通过state\b获取到的props作前后浅比较，若有变化，该容器层props改变触发组件render，而非一有state变化就render")]),t._v(" "),e("p",[t._v("改进点？：action和reducer繁琐；action和reducer需要匹配自定义type来关联，而不是自动关联。")]),t._v(" "),e("h3",{attrs:{id:"fiber"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiber"}},[t._v("#")]),t._v(" fiber")]),t._v(" "),e("p",[t._v("任务分片，任务优先级，基于requestIdleCallback、requestAnimationFrame")]),t._v(" "),e("h3",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" context")]),t._v(" "),e("p",[t._v("16.3前后api对比")]),t._v(" "),e("p",[t._v("解决：不符合分形、无法穿透shouldUpdateComponent")]),t._v(" "),e("h3",{attrs:{id:"hook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hook"}},[t._v("#")]),t._v(" hook")]),t._v(" "),e("h3",{attrs:{id:"setstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setstate"}},[t._v("#")]),t._v(" setState")]),t._v(" "),e("p",[t._v("一次DOM reconciliation调用setState多次，state非立刻变化")]),t._v(" "),e("p",[t._v("transaction模型,batchedUpdates(ReactDOM.unstable_batchedUpdates)")]),t._v(" "),e("p",[t._v("###pureComponent")]),t._v(" "),e("p",[t._v("和普通component差异：")]),t._v(" "),e("p",[t._v("自动添加shouldUpdateComponent的判断，对变化前后的props和state进行浅比较返回bool，来决定要不要走render")]),t._v(" "),e("h3",{attrs:{id:"immutable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#immutable"}},[t._v("#")]),t._v(" immutable")]),t._v(" "),e("p",[t._v("优势：")]),t._v(" "),e("p",[t._v("命名：$$")]),t._v(" "),e("p",[t._v("一个有趣的现象：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("<div>\n  {\n    immutable.fromJS([{ a: 1 }, 2, 3]) // 渲染成a123\n  }\n</div>\n<div>\n  {\n    [{ a: 1 }, 2, 3] // 报错\n  }\n</div>\n")])])]),e("p",[t._v("因为渲染时递归判断元素是否为简单值（作为text节点渲染）？是否为ReactElement实例（作为原生DOM或者组件渲染）？是否为数组（是的话调用其"),e("code",[t._v("Symbol.iterator")]),t._v("得到其子集，继续对子集元素递归以上步骤）？都为否的话则无法渲染。\n"),e("code",[t._v("{a: 1}")]),t._v("在immutable化后，是一个布署了iterator接口的Map，遍历结构类似"),e("code",[t._v('[["a", 1]]')]),t._v("，所以可以渲染成文本节点"),e("code",[t._v("a")]),t._v(" 和"),e("code",[t._v("1")]),t._v("；而Object类型的"),e("code",[t._v("{a: 1}")]),t._v("则无法满足以上条件。")]),t._v(" "),e("h2",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("h3",{attrs:{id:"e2e、unit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#e2e、unit"}},[t._v("#")]),t._v(" e2e、unit")]),t._v(" "),e("p",[t._v("karma、macha")]),t._v(" "),e("h2",{attrs:{id:"node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),e("h3",{attrs:{id:"进程模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进程模块"}},[t._v("#")]),t._v(" 进程模块")]),t._v(" "),e("p",[t._v("进程通信\nexec：shell，一次性数据\nspawn：stream管道，stdout\nfork：特殊的spawn（node），IPC管道，可用process.send(data)和process.on('message', callback)通信")]),t._v(" "),e("h3",{attrs:{id:"package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package-json"}},[t._v("#")]),t._v(" package.json")]),t._v(" "),e("h4",{attrs:{id:"npm-install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-install"}},[t._v("#")]),t._v(" NPM install")]),t._v(" "),e("p",[e("code",[t._v("npm i")]),t._v("：安装pkg所有dependencies，devdependencies\n"),e("code",[t._v("npm i [module] [-S/-D]")]),t._v("：安装[module]到此目录下的node_modules并记录到pkg\n"),e("code",[t._v("-g")]),t._v("：安装到全局node_modules\n"),e("code",[t._v("npm uninstall [module] [-g]")]),t._v("：卸载")]),t._v(" "),e("h4",{attrs:{id:"scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scripts"}},[t._v("#")]),t._v(" scripts")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('scripts: {\n  "test": "node bin/test.js --hot"\n}\n')])])]),e("p",[t._v("通过"),e("code",[t._v("npm run test")]),t._v("来快捷执行"),e("code",[t._v("node bin/test.js --hot")]),t._v("，script中process.argvs读取命令行参数")]),t._v(" "),e("h4",{attrs:{id:"版本号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本号"}},[t._v("#")]),t._v(" 版本号")]),t._v(" "),e("p",[e("code",[t._v("^1.2.3")]),t._v("：可兼容到1.x.x\n"),e("code",[t._v("~1.2.3")]),t._v("：可兼容到1.2.x")]),t._v(" "),e("h4",{attrs:{id:"bin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bin"}},[t._v("#")]),t._v(" bin")]),t._v(" "),e("p",[t._v("shell方式运行，bin如下设置")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('bin: {\n  "my-bin": "bin/my-bin.js"\n}\n')])])]),e("p",[e("code",[t._v("my-bin.js")]),t._v("中的文件首行加上"),e("code",[t._v("#!/usr/bin/env node")]),t._v("表示以node环境运行")]),t._v(" "),e("p",[t._v("install之后，my-bin.js会被复制到"),e("code",[t._v("node_modules/.bin")]),t._v("下成为shell脚本，在cmd中直接"),e("code",[t._v("node_modules/.bin/my-bin [--params]")]),t._v("（或者全局安装后"),e("code",[t._v("my-bin [--params]")]),t._v("）来运行")]),t._v(" "),e("h3",{attrs:{id:"爬虫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#爬虫"}},[t._v("#")]),t._v(" 爬虫")]),t._v(" "),e("p",[t._v("历史、当前")]),t._v(" "),e("h2",{attrs:{id:"pwa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pwa"}},[t._v("#")]),t._v(" PWA")]),t._v(" "),e("p",[t._v("对象：")]),t._v(" "),e("p",[t._v("作用域：sw.js相对路径下的client受控、该域同一时间只有一个sw")]),t._v(" "),e("p",[t._v("serviceWorker更新时机（检查sw，若改变则重新install）：页面初始化、手动reg.update()、触发了push等事件且24h未更新")]),t._v(" "),e("p",[t._v("skipWaiting：")]),t._v(" "),e("p",[t._v("不等老sw的client全部卸载，直接激活新sw")]),t._v(" "),e("p",[t._v("claim：")]),t._v(" "),e("p",[t._v("控制当前作用域还未被控制的client ？？")]),t._v(" "),e("p",[t._v("install：注册，一般cache在此时操作")]),t._v(" "),e("p",[t._v("active：激活")]),t._v(" "),e("p",[t._v("fetch：等sw active后才受控")]),t._v(" "),e("p",[t._v("缓存：")]),t._v(" "),e("p",[t._v("serviceWorker监听client的fetch，从cache判断命中")]),t._v(" "),e("p",[t._v("消息推送：")]),t._v(" "),e("p",[t._v("可视化消息")]),t._v(" "),e("p",[t._v("register返回registration对象，在此对象subscribe来注册")]),t._v(" "),e("p",[t._v("serviceWork监听push，调用registration的showNotification展示消息，client.postMessage推送给页面")]),t._v(" "),e("h2",{attrs:{id:"graphql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#graphql"}},[t._v("#")]),t._v(" GraphQL")]),t._v(" "),e("p",[t._v("query")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('query {\n  viewer { // 对象\n    name, // string数据\n    respos (first: 10, after: "cursorString") { // 对象数据，需要另开connection，返回respo列表，first：列表数量；after：分页标记；以及其他支持的查询条件\n      edges {\n        cursor // 分页标记\n        node { // 每条数据的结构\n          name\n        }\n      }\n      pageInfo { // 分页相关信息\n        hasNextPage\n      }\n    } \n    respo (name: "aaa") { // connection，返回指定name的respo或者null\n      createdAt\n    }\n  }\n}\nvariables { // 定义变量。在上面用$something使用\n  "something": {\n    "name": "bbb"\n  }\n}\n')])])]),e("p",[t._v("mutation")]),t._v(" "),e("h2",{attrs:{id:"experience"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#experience"}},[t._v("#")]),t._v(" experience")]),t._v(" "),e("h4",{attrs:{id:"产品、技术平衡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#产品、技术平衡"}},[t._v("#")]),t._v(" 产品、技术平衡")]),t._v(" "),e("h4",{attrs:{id:"推动技术、产品抽象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推动技术、产品抽象"}},[t._v("#")]),t._v(" 推动技术、产品抽象")]),t._v(" "),e("p",[t._v("弹框")]),t._v(" "),e("p",[t._v("token")]),t._v(" "),e("h4",{attrs:{id:"项目架构、前后分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目架构、前后分离"}},[t._v("#")]),t._v(" 项目架构、前后分离")]),t._v(" "),e("p",[t._v("背景：无leader、无架构、边尝试边修改")]),t._v(" "),e("p",[t._v("问题：每个系统重复搭建，且架构不一")]),t._v(" "),e("p",[t._v("改进：")]),t._v(" "),e("p",[t._v("基于vue/react+webpack抽象出通用系统模板，封装token、枚举值等，多套打包配置，及时改进")]),t._v(" "),e("p",[t._v("新增活动系统，按需打包，各项目隔离。cli启动，自定义webpack打包前后逻辑")]),t._v(" "),e("p",[t._v("思考：架构是让团队专注业务开发。适时改进，贴近业务")]),t._v(" "),e("h4",{attrs:{id:"团队分工"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#团队分工"}},[t._v("#")]),t._v(" 团队分工")]),t._v(" "),e("p",[t._v("背景：历史原因，项目架构不一，放养不限制风格，人员固定")]),t._v(" "),e("p",[t._v("问题：项目风格个人化，别人不易接手")]),t._v(" "),e("p",[t._v("改进：制定代码规范，均匀分配需求，写技术文档")]),t._v(" "),e("p",[t._v("思考：")]),t._v(" "),e("p",[t._v("1、团队像项目，低耦合可拆卸，才能长远发展")]),t._v(" "),e("p",[t._v("2、制定一个没大错的规范比没有好")]),t._v(" "),e("p",[t._v("3、写的代码是给别人看的，对自己也是一种监督")]),t._v(" "),e("p",[t._v("4、分工有度，系统负责人，减少技术债")]),t._v(" "),e("h4",{attrs:{id:"开发流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发流程"}},[t._v("#")]),t._v(" 开发流程")]),t._v(" "),e("p",[t._v("背景：开发规范、产品规范薄弱")]),t._v(" "),e("p",[t._v("问题：甩锅接口，prd过简，团队开发效率低，延期率高")]),t._v(" "),e("p",[t._v("改进：推进swagger+mock，推进产品规范（抽离通用组件，一致性），git workflow & 自动化发布")]),t._v(" "),e("p",[t._v("思考：规范推动效率，充足的时间才能保证项目质量")]),t._v(" "),e("h4",{attrs:{id:"如何写基础组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何写基础组件"}},[t._v("#")]),t._v(" 如何写基础组件")]),t._v(" "),e("p",[t._v("定义好输入=>输出，中间的复杂变化交给代码")]),t._v(" "),e("p",[t._v("满足固定逻辑：\n取舍有度，不能无限制灵活（table表格）")]),t._v(" "),e("p",[t._v("易拓展：\n不仅是枚举出来的选项，只要满足规定就可用（slot、函数），给默认值\n降低耦合性、抛出必要信息给外部业务处理（input联想输入里的http请求）")]),t._v(" "),e("p",[t._v("代码质量：\n缓存优化、加载卸载")]),t._v(" "),e("h2",{attrs:{id:"加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加密"}},[t._v("#")]),t._v(" 加密")]),t._v(" "),e("h3",{attrs:{id:"rsa非对称加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rsa非对称加密"}},[t._v("#")]),t._v(" RSA非对称加密")]),t._v(" "),e("h4",{attrs:{id:"用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),e("p",[t._v("密钥a：e（指数），n（模）\n密钥b：d（指数），n（模）")]),t._v(" "),e("p",[t._v("用密钥a把M加密为C：C = M ** e (mod n)\n用密钥b把C还原为M：M = C ** d (mod n)")]),t._v(" "),e("p",[t._v("也可以反过来用密钥b加密，密钥a还原，从数学上密钥a、b完全可以交换使用。但在实际运用中，一般会生成一个指数较小的（或者固定的）数作为公钥开放（客户端使用起来更方便），指数较大的数作为私钥。如果将它们交换，相当于用一个指数较小的数作为私钥，较容易被反推出来，不安全。")]),t._v(" "),e("h4",{attrs:{id:"密钥对生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#密钥对生成"}},[t._v("#")]),t._v(" 密钥对生成")]),t._v(" "),e("p",[t._v("生成e，d，n过程：")]),t._v(" "),e("p",[t._v("1、选取两个足够大的素数：p、q")]),t._v(" "),e("p",[t._v("2、n = p * q")]),t._v(" "),e("p",[t._v("3、m = (p - 1) * (q - 1)")]),t._v(" "),e("p",[t._v("4、找一个与m互质的数e，且1 < e < m")]),t._v(" "),e("p",[t._v("5、找出d，使得d * e (mod m) = 1")]),t._v(" "),e("p",[t._v("6、生成完毕，密钥a：(e, n)，密钥b：(d, n)")]),t._v(" "),e("h4",{attrs:{id:"安全性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全性"}},[t._v("#")]),t._v(" 安全性")]),t._v(" "),e("p",[t._v("安全性是基于：大素数分解困难。在这个条件成立的前提下，通过已知的大素数n难以反推出p、q，所以也难以推出e、d，因此密钥a、b虽然可以相互加密解密，但算出另一密钥是困难的。")]),t._v(" "),e("h4",{attrs:{id:"例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),e("p",[t._v("生成密钥对")]),t._v(" "),e("p",[t._v("1、选取两个素数 p = 3 ，q = 11（为方便举例选取了较小的素数）")]),t._v(" "),e("p",[t._v("2、n = p * q = 3 * 11 = 33")]),t._v(" "),e("p",[t._v("3、m = (p - 1) * (q - 1) = (3 - 1) * (11 - 1) = 20")]),t._v(" "),e("p",[t._v("4、从比m小的数中找出一个与m互质的数 e = 3")]),t._v(" "),e("p",[t._v("5、可以通过穷举法，d从1开始递增，试出满足条件的最小的d = 7")]),t._v(" "),e("p",[t._v("6、得出一对密钥：密钥a：(3, 33)，密钥b：(7, 33)")]),t._v(" "),e("p",[t._v("对'rsa'这个字符串加密")]),t._v(" "),e("p",[t._v("1、对‘rsa’进行数字化转化，'r'，‘s'，’a'可以转化成其对应字母表次序：18、19、1")]),t._v(" "),e("p",[t._v("2、用密钥a加密：")]),t._v(" "),e("p",[t._v("r => 18 => 18 ** 3 % 33 => 24")]),t._v(" "),e("p",[t._v("s => 19 => 19 ** 3 % 33 => 28")]),t._v(" "),e("p",[t._v("a => 1 => 1 ** 3 % 33 => 1")]),t._v(" "),e("p",[t._v("加密后：['r', 's', 'a'] => [24, 28, 1]")]),t._v(" "),e("p",[t._v("对加密后的[24, 28, 1]进行还原")]),t._v(" "),e("p",[t._v("1、用密钥b解密")]),t._v(" "),e("p",[t._v("24 => 24 ** 7 % 33 => 18 => r")]),t._v(" "),e("p",[t._v("28 => 28 ** 7 % 33 => 19 => s")]),t._v(" "),e("p",[t._v("1 => 1 ** 7 % 33 => 1 => a")]),t._v(" "),e("p",[t._v("得出结果'rsa'")]),t._v(" "),e("h2",{attrs:{id:"工程化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工程化"}},[t._v("#")]),t._v(" 工程化")]),t._v(" "),e("h3",{attrs:{id:"规范、人员分工"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规范、人员分工"}},[t._v("#")]),t._v(" 规范、人员分工")]),t._v(" "),e("h3",{attrs:{id:"模块化-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化-2"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),e("h3",{attrs:{id:"自动化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动化"}},[t._v("#")]),t._v(" 自动化")])])}),[],!1,null,null,null);a.default=v.exports}}]);