import{_ as e,p as a,q as r,a1 as n}from"./framework-5866ffd3.js";const c={},i=n('<h1 id="electron" tabindex="-1"><a class="header-anchor" href="#electron" aria-hidden="true">#</a> Electron</h1><p>一个使用JS编写系统App的工具，本质是node+chromium。</p><h2 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h2><p>运行时有两类核心进程：</p><ul><li>主进程</li></ul><p>代码在node环境，可调度渲染进程，可监听ipcMain事件</p><ul><li>渲染进程</li></ul><p>由主进程调起，可加载指定的html/js等，代码在chromium环境（类前端环境，还包括一些electron注入的模块），可通过ipcRenderer和ipcMain通信。</p><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译" aria-hidden="true">#</a> 编译</h2><p>会把整套node+chromium环境都打包到App，包括V8引擎和blink内核，以及业务代码依赖的node_modules。所以即使业务逻辑只有几行代码，App包也有几百M。</p><p>业务代码都被打包到app.asar压缩文件，本质上是一个套壳的文件夹，包含完整的业务代码结构，可在node环境中以文件方式读取。</p>',11),o=[i];function t(d,l){return a(),r("div",null,o)}const h=e(c,[["render",t],["__file","electron.html.vue"]]);export{h as default};
