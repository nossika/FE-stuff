import{_ as e,p as a,q as r,a1 as c}from"./framework-5866ffd3.js";const t="/FE-stuff/assets/cache-b985e79d.png",h={},o=c('<h1 id="缓存" tabindex="-1"><a class="header-anchor" href="#缓存" aria-hidden="true">#</a> 缓存</h1><h2 id="http协议的缓存" tabindex="-1"><a class="header-anchor" href="#http协议的缓存" aria-hidden="true">#</a> HTTP协议的缓存</h2><p><img src="'+t+'" alt="HTTP缓存"></p><h4 id="缓存位置" tabindex="-1"><a class="header-anchor" href="#缓存位置" aria-hidden="true">#</a> 缓存位置</h4><p>service worker、memory（关闭tab清空）、disk</p><h4 id="cache-control" tabindex="-1"><a class="header-anchor" href="#cache-control" aria-hidden="true">#</a> cache-control</h4><ul><li><p>no-cache：有缓存，但使用前必须先和服务端协商</p></li><li><p>no-store：禁止缓存</p></li></ul><p>chrome中，除了no-store的情况，当前页多次同一资源的请求（无论同步异步）只会从网络获取一次，其余都从memory获取（且不显示在network），如果no-store，则多少请求就获取多少次</p>',8),n=[o];function s(i,d){return a(),r("div",null,n)}const p=e(h,[["render",s],["__file","cache.html.vue"]]);export{p as default};
